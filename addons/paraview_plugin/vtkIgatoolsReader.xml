<!--
//=+=====================================================================
// Igatools a general purpose Isogeometric analysis library.
// Copyright (C) 2012-2015  by the igatools authors (see authors.txt).
//
// This file is part of the igatools library.
//
// The igatools library is free software: you can use it, redistribute
// it and/or modify it under the terms of the GNU General Public
// License as published by the Free Software Foundation, either
// version 3 of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//=+=====================================================================
-->

<ServerManagerConfiguration>
  <ProxyGroup name="sources">
    <!-- ================================================================== -->
    <SourceProxy name="vtkIgatoolsReader" class="vtkIgatoolsReader" label="vtkIgatoolsReader">
      <Documentation
         long_help="Read a .iga file."
         short_help="Read a .iga file.">
      </Documentation>
      <StringVectorProperty
            name="FileName"
            animateable="0"
            command="SetFileName"
            number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the Igatools reader.
        </Documentation>
      </StringVectorProperty>

      <Hints>
        <ReaderFactory extensions="iga"
                       file_description="Igatools File Format" />
      </Hints>


      <!-- ################################################################# -->
      <!-- Options for the physical mesh ################################### -->
      <!-- ################################################################# -->

      <IntVectorProperty name="PhysicalMesh"
                         command="SetPhysicalMesh"
                         number_of_elements="1"
                         label="Create physical geometries"
                         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the physical mesh geometries.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="SolidMeshPhysical"
                         command="SetSolidMeshPhysical"
                         number_of_elements="1"
                         label="Create the solid mesh"
                         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the solid mesh geometry.
        </Documentation>
        <!-- This property is hidden when PhysicalMesh = 0 -->
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <IntVectorProperty name="ControlMeshPhysical"
                         command="SetControlMeshPhysical"
                         number_of_elements="1"
                         label="Create control mesh"
                         default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the control mesh geometry
          for the physical mesh.
        </Documentation>
        <!-- This property is hidden when PhysicalMesh = 0 -->
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <IntVectorProperty name="KnotMeshPhysical"
                         command="SetKnotMeshPhysical"
                         number_of_elements="1"
                         label="Create the knot mesh"
                         default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the knot mesh geometry.
        </Documentation>
        <!-- This property is hidden when PhysicalMesh = 0 -->
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <IntVectorProperty command="SetGridTypePhysical"
                         default_values="0"
                         name="GridTypePhysical"
                         label="VTK grid type"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="VTK Unstructured grid - quadratic elements"
                 value="0" />
          <Entry text="VTK Unstructured grid - linear elements"
                 value="1" />
          <Entry text="VTK Structured grid"
                 value="2" />
        </EnumerationDomain>
        <Documentation>
          This propery specifies which type of grid must be produced
          for the physical mesh.
          The produced VTK Structured grids have certain advantages over
          VTK Unstructured grids, however, some issues can appear when some
          filters are applied to them.
          The use of quadratic elements improves the visualization
          (mainly when tessellation filter is applied later).
        </Documentation>
        <!-- This property is hidden when PhysicalMesh = 0 -->
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <IntVectorProperty command="SetNumVisualizationElementsPhysical"
                         default_values="1 1 1"
                         name="NumVisualizationElementsPhysical"
                         label="Number of VTK cells per Bezier element"
                         number_of_elements="3">
        <IntRangeDomain name="range" min="1" max="20"/>
        <Documentation>Set the number of visualization VTK element in each
          parametric direction for every Bezier element.
        </Documentation>
        <!-- This property is hidden when PhysicalMesh = 0 -->
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- ################################################################# -->
      <!-- ################################################################# -->



      <!-- ################################################################# -->
      <!-- Options for the parametric mesh ################################# -->
      <!-- ################################################################# -->

      <IntVectorProperty name="ParametricMesh"
                         command="SetParametricMesh"
                         number_of_elements="1"
                         label="Create parametric geometries"
                         default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the parametric mesh geometries.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="SolidMeshParametric"
                         command="SetSolidMeshParametric"
                         number_of_elements="1"
                         label="Create the solid mesh"
                         default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the solid mesh geometry.
        </Documentation>
        <!-- This property is hidden when ParametricMesh = 0 -->
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="ParametricMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <IntVectorProperty name="KnotMeshParametric"
                         command="SetKnotMeshParametric"
                         number_of_elements="1"
                         label="Create the knot mesh"
                         default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the knot mesh geometry.
        </Documentation>
        <!-- This property is hidden when ParametriMesh = 0 -->
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="ParametricMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <IntVectorProperty command="SetGridTypeParametric"
                         default_values="0"
                         name="GridTypeParametric"
                         label="VTK grid type"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="VTK Unstructured grid - quadratic elements"
                 value="0" />
          <Entry text="VTK Unstructured grid - linear elements"
                 value="1" />
          <Entry text="VTK Structured grid"
                 value="2" />
        </EnumerationDomain>
        <Documentation>
          This propery specifies which type of grid must be produced
          for the parametric mesh.
          The produced VTK Structured grids have certain advantages over
          VTK Unstructured grids, however, some issues can appear when some
          filters are applied to them.
          The use of quadratic elements improves the visualization
          (mainly when tessellation filter is applied later).
        </Documentation>
        <!-- This property is hidden when ParametriMesh = 0 -->
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="ParametricMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <IntVectorProperty command="SetNumVisualizationElementsParametric"
                         default_values="1 1 1"
                         name="NumVisualizationElementsParametric"
                         label="Number of VTK cells per Bezier element"
                         number_of_elements="3">
        <IntRangeDomain name="range" min="1" max="20"/>
        <Documentation>Set the number of visualization VTK element in each
          parametric direction for every Bezier element.
        </Documentation>
        <!-- This property is hidden when ParametriMesh = 0 -->
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="ParametricMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- ################################################################# -->
      <!-- ################################################################# -->
 

      <!-- ################################################################# -->
      <!-- Creating the groups inside the properties panel ################# -->
      <PropertyGroup label="Physical geometry">
        <Property name="PhysicalMesh" />
        <Property name="SolidMeshPhysical" />
        <Property name="KnotMeshPhysical" />
        <Property name="ControlMeshPhysical" />
        <Property name="GridTypePhysical" />
        <Property name="NumVisualizationElementsPhysical" />
      </PropertyGroup>

      <PropertyGroup label="Parametric geometry">
        <Property name="ParametricMesh" />
        <Property name="SolidMeshParametric" />
        <Property name="KnotMeshParametric" />
        <Property name="GridTypeParametric" />
        <Property name="NumVisualizationElementsParametric" />

      <!-- ################################################################# -->
      <!-- ################################################################# -->
      </PropertyGroup>


    </SourceProxy>
    <!-- End Reader -->
  </ProxyGroup>
  <!-- End Filters Group -->
</ServerManagerConfiguration>

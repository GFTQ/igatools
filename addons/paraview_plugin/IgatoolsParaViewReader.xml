<!--
//=+=====================================================================
// Igatools a general purpose Isogeometric analysis library.
// Copyright (C) 2012-2015  by the igatools authors (see authors.txt).
//
// This file is part of the igatools library.
//
// The igatools library is free software: you can use it, redistribute
// it and/or modify it under the terms of the GNU General Public
// License as published by the Free Software Foundation, either
// version 3 of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//=+=====================================================================
-->

<ServerManagerConfiguration>
  <ProxyGroup name="sources">
    <!-- ================================================================== -->
    <SourceProxy name="IgatoolsParaViewReader"
                 class="IgatoolsParaViewReader"
                 label="Igatools-ParaView reader">
      <Documentation
         long_help="Read an igatools .iga file."
         short_help="Read an igatools .iga file.">
      </Documentation>
      <StringVectorProperty
            name="FileName"
            animateable="0"
            command="SetFileName"
            number_of_elements="1">
        <FileListDomain name="files"/>
        <Documentation>
          This property specifies the file name for the Igatools reader.
        </Documentation>
      </StringVectorProperty>

      <Hints>
        <ReaderFactory extensions="iga"
                       file_description="Igatools File Format" />
      </Hints>


      <!-- Activates/deactivates the creation of the physical mesh -->
      <IntVectorProperty name="PhysicalMesh"
                         command="SetPhysicalMesh"
                         number_of_elements="1"
                         label="Create physical geometries"
                         panel_visibility="default"
                         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the physical mesh geometries.
        </Documentation>
      </IntVectorProperty>


      <!-- Activates/deactivates the creation of the parametric mesh -->
      <IntVectorProperty name="ParametricMesh"
                         command="SetParametricMesh"
                         number_of_elements="1"
                         label="Create parametric geometries"
                         panel_visibility="default"
                         default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the parametric mesh geometries.
        </Documentation>
      </IntVectorProperty>


      <!-- ################################################################# -->
      <!-- Options for the physical mesh ################################### -->
      <!-- ################################################################# -->


      <!-- Creates a menu for selecting/deselecting physical maps-->
      <StringVectorProperty name="PhysGeomArrayInfo" information_only="1" >
        <ArraySelectionInformationHelper attribute_name="PhysGeom" />
      </StringVectorProperty>

      <StringVectorProperty name="PhysGeomArrayStatus"
                            command="SetPhysGeomArrayStatus"
                            number_of_elements="0"
                            repeat_command="1" number_of_elements_per_command="2"
                            element_types="2 0"
                            panel_visibility="default"
                            information_property="PhysGeomArrayInfo"
                            label="Physical patches">
        <ArraySelectionDomain name="array_list">
          <RequiredProperties>
            <Property name="PhysGeomArrayInfo" function="ArrayList" />
          </RequiredProperties>
        </ArraySelectionDomain>

        <Hints>
          <!-- This property is hidden when PhysicalMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>

      </StringVectorProperty>

      <!-- Activates/deactivates the creation of the physical solid mesh -->
      <IntVectorProperty name="SolidMeshPhysical"
                         command="SetSolidMeshPhysical"
                         number_of_elements="1"
                         label="Create the solid mesh"
                         panel_visibility="advanced"
                         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the solid mesh geometry.
        </Documentation>
        <Hints>
          <!-- This property is hidden when PhysicalMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- Sets the VTK cell type the physical solid mesh -->
      <IntVectorProperty command="SetGridTypePhysicalSolid"
                         default_values="0"
                         name="GridTypePhysicalSolid"
                         panel_visibility="advanced"
                         label="Grid type"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="VTK Unstructured grid - quadratic cells"
                 value="0" />
          <Entry text="VTK Unstructured grid - linear cells"
                 value="1" />
          <Entry text="VTK Structured grid"
                 value="2" />
        </EnumerationDomain>
        <Documentation>
          This propery specifies which type of grid must be produced
          for the physical solid mesh.
          The produced VTK Structured grids have certain advantages over
          VTK Unstructured grids, however, some issues can appear when some
          filters are applied to them.
          The use of quadratic cells improves the visualization
          (mainly when tessellation filter is applied later).
        </Documentation>
        <Hints>
          <!-- This property is hidden when PhysicalMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- Sets the number of visualization cells per Bezier element
           for the physical solid mesh -->
      <IntVectorProperty command="SetNumVisualizationElementsPhysicalSolid"
                         default_values="1 1 1"
                         name="NumVisualizationElementsPhysicalSolid"
                         label="Num of cells per Bezier element direction"
                         panel_visibility="advanced"
                         number_of_elements="3">
        <IntRangeDomain name="range" min="1" max="20"/>
        <Documentation>Set the number of visualization VTK cells in each
          parametric direction for every Bezier element of the physical solid mesh.
        </Documentation>
        <Hints>
          <!-- This property is hidden when PhysicalMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- Activates/deactivates the creation of the physical knot mesh -->
      <IntVectorProperty name="KnotMeshPhysical"
                         command="SetKnotMeshPhysical"
                         number_of_elements="1"
                         label="Create the knot mesh"
                         panel_visibility="advanced"
                         default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the knot mesh geometry.
        </Documentation>
        <Hints>
          <!-- This property is hidden when PhysicalMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- Sets the VTK cell type the physical knot mesh -->
      <IntVectorProperty command="SetGridTypePhysicalKnot"
                         default_values="0"
                         panel_visibility="advanced"
                         name="GridTypePhysicalKnot"
                         label="Grid type"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="VTK Unstructured grid - quadratic cells"
                 value="0" />
          <Entry text="VTK Unstructured grid - linear cells"
                 value="1" />
        </EnumerationDomain>
        <Documentation>
          This propery specifies which type of grid must be produced
          for the physical knot mesh.
          The produced VTK Structured grids have certain advantages over
          VTK Unstructured grids, however, some issues can appear when some
          filters are applied to them.
          The use of quadratic cells improves the visualization
          (mainly when tessellation filter is applied later).
        </Documentation>
        <Hints>
          <!-- This property is hidden when PhysicalMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- Sets the number of visualization cells per Bezier cells
           for the physical knot mesh -->
      <IntVectorProperty command="SetNumVisualizationElementsPhysicalKnot"
                         default_values="5 5 5"
                         panel_visibility="advanced"
                         name="NumVisualizationElementsPhysicalKnot"
                         label="Num of cells per Bezier element direction"
                         number_of_elements="3">
        <IntRangeDomain name="range" min="1" max="20"/>
        <Documentation>Set the number of visualization VTK cell in each
          parametric direction for every Bezier element of the physical knot mesh.
        </Documentation>
        <Hints>
          <!-- This property is hidden when PhysicalMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- Activates/deactivates the creation of the physical control mesh -->
      <IntVectorProperty name="ControlMeshPhysical"
                         command="SetControlMeshPhysical"
                         number_of_elements="1"
                         panel_visibility="advanced"
                         label="Create control mesh"
                         default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the control mesh geometry
          for the physical mesh.
        </Documentation>
        <Hints>
          <!-- This property is hidden when PhysicalMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- Sets the VTK cell type the physical control mesh -->
      <IntVectorProperty command="SetGridTypePhysicalControl"
                         default_values="1"
                         panel_visibility="advanced"
                         name="GridTypePhysicalControl"
                         label="Grid type"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="VTK Unstructured grid - points and lines"
                 value="1" />
          <Entry text="VTK Structured grid"
                 value="2" />
        </EnumerationDomain>
        <Documentation>
          This propery specifies which type of grid must be produced
          for the physical control mesh.
        </Documentation>
        <Hints>
          <!-- This property is hidden when PhysicalMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="PhysicalMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- ################################################################# -->
      <!-- ################################################################# -->



      <!-- ################################################################# -->
      <!-- Options for the parametric mesh ################################# -->
      <!-- ################################################################# -->

      <!-- Creates a menu for selecting/deselecting parametric maps-->
      <StringVectorProperty name="ParmGeomArrayInfo" information_only="1" >
        <ArraySelectionInformationHelper attribute_name="ParmGeom" />
      </StringVectorProperty>

      <StringVectorProperty name="ParmGeomArrayStatus"
                            command="SetParmGeomArrayStatus"
                            number_of_elements="0"
                            repeat_command="1" number_of_elements_per_command="2"
                            element_types="2 0"
                            panel_visibility="default"
                            information_property="ParmGeomArrayInfo"
                            label="Parametric patches">
        <ArraySelectionDomain name="array_list">
          <RequiredProperties>
            <Property name="ParmGeomArrayInfo" function="ArrayList" />
          </RequiredProperties>
        </ArraySelectionDomain>

        <Hints>
          <!-- This property is hidden when ParametricMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="ParametricMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>

      </StringVectorProperty>



      <!-- Activates/deactivates the creation of the parametric solid mesh -->
      <IntVectorProperty name="SolidMeshParametric"
                         command="SetSolidMeshParametric"
                         number_of_elements="1"
                         label="Create the solid mesh"
                         panel_visibility="advanced"
                         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the solid mesh geometry.
        </Documentation>
        <Hints>
          <!-- This property is hidden when ParametricMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="ParametricMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- Sets the VTK cell type the parametric solid mesh -->
      <IntVectorProperty command="SetGridTypeParametricSolid"
                         default_values="0"
                         name="GridTypeParametricSolid"
                         label="Grid type"
                         panel_visibility="advanced"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="VTK Unstructured grid - quadratic cells"
                 value="0" />
          <Entry text="VTK Unstructured grid - linear cells"
                 value="1" />
          <Entry text="VTK Structured grid"
                 value="2" />
        </EnumerationDomain>
        <Documentation>
          This propery specifies which type of grid must be produced
          for the parametric solid mesh.
          The produced VTK Structured grids have certain advantages over
          VTK Unstructured grids, however, some issues can appear when some
          filters are applied to them.
          The use of quadratic cells improves the visualization
          (mainly when tessellation filter is applied later).
        </Documentation>
        <Hints>
          <!-- This property is hidden when ParametricMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="ParametricMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- Sets the number of visualization cells per Bezier element
           for the parametric solid mesh -->
      <IntVectorProperty command="SetNumVisualizationElementsParametricSolid"
                         default_values="1 1 1"
                         name="NumVisualizationElementsParametricSolid"
                         label="Num of cells per Bezier element direction"
                         panel_visibility="advanced"
                         number_of_elements="3">
        <IntRangeDomain name="range" min="1" max="20"/>
        <Documentation>Set the number of visualization VTK cell in each
          parametric direction for every Bezier element of the physical solid mesh.
        </Documentation>
        <Hints>
          <!-- This property is hidden when ParametricMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="ParametricMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- Activates/deactivates the creation of the parametric knot mesh -->
      <IntVectorProperty name="KnotMeshParametric"
                         command="SetKnotMeshParametric"
                         number_of_elements="1"
                         label="Create the knot mesh"
                         panel_visibility="advanced"
                         default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Activates/deactivates the creation of the knot mesh geometry.
        </Documentation>
        <Hints>
          <!-- This property is hidden when ParametriMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="ParametricMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- Sets the VTK cell type the parametric knot mesh -->
      <IntVectorProperty command="SetGridTypeParametricKnot"
                         default_values="1"
                         panel_visibility="advanced"
                         name="GridTypeParametricKnot"
                         label="Grid type"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="VTK Unstructured grid - quadratic cells"
                 value="0" />
          <Entry text="VTK Unstructured grid - linear cells"
                 value="1" />
        </EnumerationDomain>
        <Documentation>
          This propery specifies which type of grid must be produced
          for the parametric knot mesh.
          The produced VTK Structured grids have certain advantages over
          VTK Unstructured grids, however, some issues can appear when some
          filters are applied to them.
          The use of quadratic cells improves the visualization
          (mainly when tessellation filter is applied later).
        </Documentation>
        <Hints>
          <!-- This property is hidden when ParametricMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="ParametricMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <!-- Sets the number of visualization cells per Bezier element
           for the parametric knot mesh -->
      <IntVectorProperty command="SetNumVisualizationElementsParametricKnot"
                         default_values="1 1 1"
                         panel_visibility="advanced"
                         name="NumVisualizationElementsParametricKnot"
                         label="Num of cells per Bezier element direction"
                         number_of_elements="3">
        <IntRangeDomain name="range" min="1" max="20"/>
        <Documentation>Set the number of visualization VTK cell in each
          parametric direction for every Bezier element of the physical knot mesh.
        </Documentation>
        <Hints>
          <!-- This property is hidden when ParametriMesh = 0 -->
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="ParametricMesh"
                                   inverse="1"
                                   value="0" />
        </Hints>
      </IntVectorProperty>



      <!-- ################################################################# -->
      <!-- ################################################################# -->

      <!-- ################################################################# -->
      <!-- Creating the groups inside the properties panel ################# -->
      <PropertyGroup label=" ">
        <Property name="PhysicalMesh" />
        <Property name="ParametricMesh" />
      </PropertyGroup>

      <PropertyGroup label="Physical mesh">
        <Property name="PhysGeomArrayStatus" />
      </PropertyGroup>

      <PropertyGroup label=" ">
        <Property name="SolidMeshPhysical" />
        <Property name="GridTypePhysicalSolid" />
        <Property name="NumVisualizationElementsPhysicalSolid" />
      </PropertyGroup>

      <PropertyGroup label=" ">
        <Property name="KnotMeshPhysical" />
        <Property name="GridTypePhysicalKnot" />
        <Property name="NumVisualizationElementsPhysicalKnot" />
      </PropertyGroup>

      <PropertyGroup label=" ">
        <Property name="ControlMeshPhysical" />
        <Property name="GridTypePhysicalControl" />
      </PropertyGroup>


      <PropertyGroup label="Parametric mesh">
        <Property name="ParmGeomArrayStatus" />
      </PropertyGroup>

      <PropertyGroup label=" ">
        <Property name="SolidMeshParametric" />
        <Property name="GridTypeParametricSolid" />
        <Property name="NumVisualizationElementsParametricSolid" />
      </PropertyGroup>

      <PropertyGroup label=" ">
        <Property name="KnotMeshParametric" />
        <Property name="GridTypeParametricKnot" />
        <Property name="NumVisualizationElementsParametricKnot" />
      </PropertyGroup>
      <!-- ################################################################# -->
      <!-- ################################################################# -->


    </SourceProxy>
    <!-- End Reader -->
  </ProxyGroup>
  <!-- End Filters Group -->
</ServerManagerConfiguration>
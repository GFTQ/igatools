========= BEGIN do_test<1> =========
Testing the default constructor
Size: [ 0 ]  Weights: [0]
Direction: 0
[ ]

Testing the entry() function
Size: [ 2 ]  Weights: [2]
Direction: 0
[ 1.00000 2.00000 ]

Testing the copy constructor
Size: [ 2 ]  Weights: [2]
Direction: 0
[ 1.00000 2.00000 ]

Testing the get_flat_cartesian_product() function
ValueVector (num_points=2) : [ [ 1.00000 ]  [ 2.00000 ]  ]

Testing the get_flat_tensor_product() function
ValueVector (num_points=2) : [ 1.00000 2.00000 ]

Testing the get_sub_product() function
Size: [ ]  Weights: []

Testing the insert() function
Size: [ 2 ]  Weights: [2]
Direction: 0
[ -2.00000 -1.00000 ]

========= END do_test<1> =========

========= BEGIN do_test<2> =========
Testing the default constructor
Size: [ 0 0 ]  Weights: [0,0]
Direction: 0
[ ]
Direction: 1
[ ]

Testing the entry() function
Size: [ 2 3 ]  Weights: [2,6]
Direction: 0
[ 1.00000 2.00000 ]
Direction: 1
[ 3.00000 4.00000 5.00000 ]

Testing the copy constructor
Size: [ 2 3 ]  Weights: [2,6]
Direction: 0
[ 1.00000 2.00000 ]
Direction: 1
[ 3.00000 4.00000 5.00000 ]

Testing the get_flat_cartesian_product() function
ValueVector (num_points=6) : [ [ 1.00000 3.00000 ]  [ 2.00000 3.00000 ]  [ 1.00000 4.00000 ]  [ 2.00000 4.00000 ]  [ 1.00000 5.00000 ]  [ 2.00000 5.00000 ]  ]

Testing the get_flat_tensor_product() function
ValueVector (num_points=6) : [ 3.00000 6.00000 4.00000 8.00000 5.00000 10.0000 ]

Testing the get_sub_product() function
Size: [ 3 ]  Weights: [3]
Direction: 0
[ 3.00000 4.00000 5.00000 ]

Testing the insert() function
Size: [ 3 2 ]  Weights: [3,6]
Direction: 0
[ 3.00000 4.00000 5.00000 ]
Direction: 1
[ -2.00000 -1.00000 ]

========= END do_test<2> =========

========= BEGIN do_test<3> =========
Testing the default constructor
Size: [ 0 0 0 ]  Weights: [0,0,0]
Direction: 0
[ ]
Direction: 1
[ ]
Direction: 2
[ ]

Testing the entry() function
Size: [ 2 3 4 ]  Weights: [2,6,24]
Direction: 0
[ 1.00000 2.00000 ]
Direction: 1
[ 3.00000 4.00000 5.00000 ]
Direction: 2
[ 6.00000 7.00000 8.00000 9.00000 ]

Testing the copy constructor
Size: [ 2 3 4 ]  Weights: [2,6,24]
Direction: 0
[ 1.00000 2.00000 ]
Direction: 1
[ 3.00000 4.00000 5.00000 ]
Direction: 2
[ 6.00000 7.00000 8.00000 9.00000 ]

Testing the get_flat_cartesian_product() function
ValueVector (num_points=24) : [ [ 1.00000 3.00000 6.00000 ]  [ 2.00000 3.00000 6.00000 ]  [ 1.00000 4.00000 6.00000 ]  [ 2.00000 4.00000 6.00000 ]  [ 1.00000 5.00000 6.00000 ]  [ 2.00000 5.00000 6.00000 ]  [ 1.00000 3.00000 7.00000 ]  [ 2.00000 3.00000 7.00000 ]  [ 1.00000 4.00000 7.00000 ]  [ 2.00000 4.00000 7.00000 ]  [ 1.00000 5.00000 7.00000 ]  [ 2.00000 5.00000 7.00000 ]  [ 1.00000 3.00000 8.00000 ]  [ 2.00000 3.00000 8.00000 ]  [ 1.00000 4.00000 8.00000 ]  [ 2.00000 4.00000 8.00000 ]  [ 1.00000 5.00000 8.00000 ]  [ 2.00000 5.00000 8.00000 ]  [ 1.00000 3.00000 9.00000 ]  [ 2.00000 3.00000 9.00000 ]  [ 1.00000 4.00000 9.00000 ]  [ 2.00000 4.00000 9.00000 ]  [ 1.00000 5.00000 9.00000 ]  [ 2.00000 5.00000 9.00000 ]  ]

Testing the get_flat_tensor_product() function
ValueVector (num_points=24) : [ 18.0000 36.0000 24.0000 48.0000 30.0000 60.0000 21.0000 42.0000 28.0000 56.0000 35.0000 70.0000 24.0000 48.0000 32.0000 64.0000 40.0000 80.0000 27.0000 54.0000 36.0000 72.0000 45.0000 90.0000 ]

Testing the get_sub_product() function
Size: [ 3 4 ]  Weights: [3,12]
Direction: 0
[ 3.00000 4.00000 5.00000 ]
Direction: 1
[ 6.00000 7.00000 8.00000 9.00000 ]

Testing the insert() function
Size: [ 3 4 2 ]  Weights: [3,12,24]
Direction: 0
[ 3.00000 4.00000 5.00000 ]
Direction: 1
[ 6.00000 7.00000 8.00000 9.00000 ]
Direction: 2
[ -2.00000 -1.00000 ]

========= END do_test<3> =========


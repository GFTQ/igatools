<?xml version="1.0" encoding="utf-8"?>
<xs:schema attributeFormDefault="unqualified"
           elementFormDefault="unqualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!-- ########################################################## -->
  <!-- Some basic general types definitions ##################### -->
  <!-- ########################################################## -->

  <!-- Vector of doubles -->
  <xs:simpleType name="DoubleListType">
    <xs:list itemType="xs:double"/>
  </xs:simpleType>

  <!-- Vector of non negative integers -->
  <xs:simpleType name="NonNegativeIntegerListType">
    <xs:list itemType="xs:nonNegativeInteger"/>
  </xs:simpleType>

  <!-- Vector of booleans -->
  <xs:simpleType name="BooleanListType">
    <xs:list itemType="xs:boolean"/>
  </xs:simpleType>

  <!-- Vector of doubles with minimum size 2 -->
  <xs:simpleType name="DoubleListMin2Type">
    <xs:restriction base="DoubleListType">
      <xs:minLength value="2"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Id type -->
  <xs:simpleType name="IdType">
    <xs:restriction base="xs:nonNegativeInteger"/>
  </xs:simpleType>

  <!-- Size type -->
  <xs:simpleType name="SizeType">
    <xs:restriction base="xs:nonNegativeInteger"/>
  </xs:simpleType>

  <!-- Vector of non negative integer with Size attribute -->
  <xs:complexType name="NonNegativeIntegerSizeListType">
    <xs:simpleContent>
      <xs:extension base="NonNegativeIntegerListType">
        <xs:attribute name="Size" type="SizeType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Vector of non negative integer with Size and Direction attributes -->
  <xs:complexType name="NonNegativeIntegerSizeDirectionListType">
    <xs:simpleContent>
      <xs:extension base="NonNegativeIntegerListType">
        <xs:attribute name="Size" type="SizeType" use="required"/>
        <xs:attribute name="Direction" type="DirectionType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Vector of double with Size attribute -->
  <xs:complexType name="DoubleSizeListType">
    <xs:simpleContent>
      <xs:extension base="DoubleListType">
        <xs:attribute name="Size" type="SizeType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Vector of double with Size and Direction attributes -->
  <xs:complexType name="DoubleSizeDirectionListType">
    <xs:simpleContent>
      <xs:extension base="DoubleListType">
        <xs:attribute name="Size" type="SizeType" use="required"/>
        <xs:attribute name="Direction" type="DirectionType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Vector of double with Size and Direction attributes and minimum size 2 -->
  <xs:complexType name="DoubleSizeDirectionListMin2Type">
    <xs:simpleContent>
      <xs:extension base="DoubleListMin2Type">
        <xs:attribute name="Size" type="SizeType" use="required"/>
        <xs:attribute name="Direction" type="DirectionType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- ########################################################## -->
  <!-- Some base igatools types definitions ##################### -->
  <!-- ########################################################## -->

  <!-- Direction type -->
  <xs:simpleType name="DirectionType">
    <xs:restriction base="xs:nonNegativeInteger">
      <!-- Igatools dimensions are limited here to 3 -->
      <xs:maxInclusive value="2"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Component type -->
  <xs:simpleType name="ComponentType">
    <xs:restriction base="xs:nonNegativeInteger">
      <!-- Igatools components are limited here to 3 -->
      <xs:maxInclusive value="2"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Type with ComponentId attribute -->
  <xs:complexType name="ComponentIdType">
    <xs:attribute name="ComponentId" type="ComponentType" use="required"/>
  </xs:complexType>

  <!-- Dim type -->
  <xs:simpleType name="DimType">
    <!-- Igatools dimensions are limited here to 3 -->
    <xs:restriction base="xs:nonNegativeInteger">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="3"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Range type -->
  <xs:simpleType name="RangeType">
    <!-- Igatools ranges are limited here to 3 -->
    <xs:restriction base="xs:positiveInteger">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="3"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Rank type -->
  <xs:simpleType name="RankType">
    <!-- Igatools ranks are limited here to 1 -->
    <xs:restriction base="xs:positiveInteger">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Codim type -->
  <xs:simpleType name="CodimType">
    <!-- Igatools codims are limited here to 2 -->
    <xs:restriction base="xs:nonNegativeInteger">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="2"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Spacedim type -->
  <xs:simpleType name="SpacedimType">
    <!-- Igatools spaceims are limited here to 3 -->
    <xs:restriction base="xs:nonNegativeInteger">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="3"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Transformation type: h_grad, h_curl, h_div and l2 -->
  <xs:simpleType name="TransformationType">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="h_grad"/>
      <xs:enumeration value="h_curl"/>
      <xs:enumeration value="h_div"/>
      <xs:enumeration value="l_2"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- End behaviour type: interpolatory, end_knots or periodic -->
  <xs:simpleType name="EndBehaviourType">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="interpolatory"/>
      <xs:enumeration value="end_knots"/>
      <xs:enumeration value="periodic"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Vector of end behaviour types -->
  <xs:simpleType name="EndBehaviourListType">
    <xs:list itemType="EndBehaviourType"/>
  </xs:simpleType>

  <!-- Type with LocalObjectId attribute -->
  <xs:complexType name="LocalObjectIdType">
    <xs:attribute name="LocalObjectId" type="IdType" use="required"/>
  </xs:complexType>

  <!-- Type with LocalObjectId and Dim attributes -->
  <xs:complexType name="LocalObjectIdDimType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdType">
        <xs:attribute name="Dim" type="DimType" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type with LocalObjectId, Dim, Range and Rank attributes -->
  <xs:complexType name="LocalObjectIdDimRangeRankType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimType">
        <xs:attribute name="Range" type="RangeType" use="required"/>
        <xs:attribute name="Rank" type="RankType" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type with LocalObjectId, Dim, Range, Rank and Codim attributes -->
  <xs:complexType name="LocalObjectIdDimRangeRankCodimType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimRangeRankType">
        <xs:attribute name="Codim" type="CodimType" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type with LocalObjectId, Dim and Codim attributes -->
  <xs:complexType name="LocalObjectIdDimCodimType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimType">
        <xs:attribute name="Codim" type="CodimType" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type with LocalObjectId, Dim and Spacedim attributes -->
  <xs:complexType name="LocalObjectIdDimSpacedimType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimType">
        <xs:attribute name="Spacedim" type="SpacedimType" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type with GetFromLocalObjectId attribute -->
  <xs:complexType name="GetFromLocalObjectIdType">
    <xs:attribute name="GetFromLocalObjectId" type="IdType" use="required"/>
  </xs:complexType>



  <!-- ########################################################## -->
  <!-- Main igatools types definitions ########################## -->
  <!-- ########################################################## -->

  <!-- Grid type -->
  <xs:complexType name="GridType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimType">
        <xs:sequence>
          <xs:element name="Knots" minOccurs="0" maxOccurs="3" type="DoubleSizeDirectionListMin2Type"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- SplineSpace type -->
  <xs:complexType name="SplineSpaceType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimRangeRankType">
        <xs:all>

          <xs:element name="Grid" type="GetFromLocalObjectIdType"/>

          <xs:element name="SplineSpaceComponents">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="SplineSpaceComponent" minOccurs="0" maxOccurs="3">
                  <xs:complexType>
                    <xs:complexContent>
                      <xs:extension base="ComponentIdType">
                        <xs:all>

                          <xs:element name="Degrees" type="NonNegativeIntegerListType"/>

                          <xs:element name="InteriorMultiplicities">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="InteriorMultiplicities" minOccurs="0" maxOccurs="3" type="NonNegativeIntegerSizeDirectionListType"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>

                          <!-- Note that this tag is optional -->
                          <xs:element name="Periodicity" type="BooleanListType" minOccurs="0" maxOccurs="1"/>

                        </xs:all>
                      </xs:extension>
                    </xs:complexContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>

        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- BSpline type -->
  <xs:complexType name="BSplineType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimRangeRankType">
        <xs:all>

          <xs:element name="SplineSpace" type="GetFromLocalObjectIdType"/>

          <!-- Note that this tag is optional -->
          <xs:element name="EndBehaviour" minOccurs="0" maxOccurs="1">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="EndBehaviour" minOccurs="0" maxOccurs="3">
                  <xs:complexType>
                    <xs:simpleContent>
                      <xs:extension base="EndBehaviourListType">
                        <xs:attribute name="ComponentId" type="IdType" use="required"/>
                      </xs:extension>
                    </xs:simpleContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>

        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- IdentityGridFunction type -->
  <xs:complexType name="IdentityGridFunctionType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimType">
        <xs:all>
          <xs:element name="Grid" type="GetFromLocalObjectIdType"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- ConstantGridFunction type -->
  <xs:complexType name="ConstantGridFunctionType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimSpacedimType">
        <xs:all>
          <xs:element name="Grid" type="GetFromLocalObjectIdType"/>
          <xs:element name="Values" type="DoubleListType"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- LinearGridFunction type -->
  <xs:complexType name="LinearGridFunctionType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimSpacedimType">
        <xs:all>
          <xs:element name="Grid" type="GetFromLocalObjectIdType"/>
          <xs:element name="A" type="DoubleListType"/>
          <xs:element name="b" type="DoubleListType"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- IgCoefficients type -->
  <xs:complexType name="IgCoefficientsType">
    <xs:all>
      <xs:element name="Indices" type="NonNegativeIntegerListType"/>
      <xs:element name="Values"  type="DoubleListType"/>
    </xs:all>
    <xs:attribute name="Size" type="SizeType" use="required"/>
  </xs:complexType>

  <!-- IgGridFunction type -->
  <xs:complexType name="IgGridFunctionType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimSpacedimType">
        <xs:all>
          <xs:element name="ReferenceSpaceBasis" type="GetFromLocalObjectIdType"/>
          <xs:element name="IgCoefficients" type="IgCoefficientsType"/>
          <!-- Note that this tag is optional -->
          <xs:element name="DofsProperty" type="xs:normalizedString" minOccurs="0" maxOccurs="1"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- NURBS type -->
  <xs:complexType name="NURBSType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimRangeRankType">
        <xs:all>
          <xs:element name="BSpline" type="GetFromLocalObjectIdType"/>
          <xs:element name="WeightFunction" type="GetFromLocalObjectIdType"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Domain type -->
  <xs:complexType name="DomainType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimCodimType">
        <xs:all>
          <xs:element name="GridFunction" type="GetFromLocalObjectIdType"/>
          <!-- Note that this tag is optional -->
          <xs:element name="Name" type="xs:normalizedString" minOccurs="0" maxOccurs="1"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- PhysicalSpaceBasis type -->
  <xs:complexType name="PhysicalSpaceBasisType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimRangeRankCodimType">
        <xs:all>
          <xs:element name="ReferenceSpaceBasis" type="GetFromLocalObjectIdType"/>
          <xs:element name="Domain" type="GetFromLocalObjectIdType"/>
          <!-- Note that this tag is optional -->
          <xs:element name="Transformation" type="TransformationType" minOccurs="0" maxOccurs="1"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- IgFunction type -->
  <xs:complexType name="IgFunctionType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimRangeRankCodimType">
        <xs:all>
          <xs:element name="PhysicalSpaceBasis" type="GetFromLocalObjectIdType"/>
          <xs:element name="IgCoefficients" type="IgCoefficientsType"/>
          <!-- Note that this tag is optional -->
          <xs:element name="Name" type="xs:normalizedString" minOccurs="0" maxOccurs="1"/>
          <!-- Note that this tag is optional -->
          <xs:element name="DofsProperty" type="xs:normalizedString" minOccurs="0" maxOccurs="1"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- ConstantFunction type -->
  <xs:complexType name="ConstantFunctionType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimRangeRankCodimType">
        <xs:all>
          <xs:element name="Domain" type="GetFromLocalObjectIdType"/>
          <xs:element name="Values" type="DoubleListType"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- LinearFunction type -->
  <xs:complexType name="LinearFunctionType">
    <xs:complexContent>
      <xs:extension base="LocalObjectIdDimRangeRankCodimType">
        <xs:all>
          <xs:element name="Domain" type="GetFromLocalObjectIdType"/>
          <xs:element name="A" type="DoubleListType"/>
          <xs:element name="b" type="DoubleListType"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Main igatools XML element type -->
  <xs:element name="Igatools">
    <xs:complexType>
      <xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element name="Grid" type="GridType"/>
          <xs:element name="SplineSpace" type="SplineSpaceType"/>
          <xs:element name="BSpline" type="BSplineType"/>
          <xs:element name="IdentityGridFunction" type="IdentityGridFunctionType"/>
          <xs:element name="ConstantGridFunction" type="ConstantGridFunctionType"/>
          <xs:element name="LinearGridFunction" type="LinearGridFunctionType"/>
          <xs:element name="IgGridFunction" type="IgGridFunctionType"/>
          <xs:element name="NURBS" type="NURBSType"/>
          <xs:element name="Domain" type="DomainType"/>
          <xs:element name="PhysicalSpaceBasis" type="PhysicalSpaceBasisType"/>
          <xs:element name="IgFunction" type="IgFunctionType"/>
          <xs:element name="ConstantFunction" type="ConstantFunctionType"/>
          <xs:element name="LinearFunction" type="LinearFunctionType"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="FormatVersion" type="xs:float" fixed="2.0" use="required"/>
    </xs:complexType>
  </xs:element>

</xs:schema>
